name: Go CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  golint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    - name: Lint
      run: |
        go install golang.org/x/lint/golint@latest
        golint -set_exit_status ./...
  sonar:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    # - name: Run SonarScanner
    #   uses: SonarSource/sonarqube-scan-action@master
    #   env:
    #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    #     SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    # - name: Test and generate coverage
    #   run: |
        # go test -coverprofile=coverage.txt -covermode=atomic ./...
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
  docker-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: user/app:latest
  deploy:
    runs-on: ubuntu-latest
    needs: [golint, sonar, test, docker-build]
    steps:
    - uses: actions/checkout@v4
    - name: Install Railway CLI
      run: |
        curl -sL https://railway.app/install.sh | bash
    - name: Deploy to Railway
      run: |
        echo ${{ secrets.RAILWAY_TOKEN }} | railway login --yes
        railway up
